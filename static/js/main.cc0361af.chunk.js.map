{"version":3,"sources":["Components/card/card.jsx","Components/card-list/card-list.jsx","Components/SearchBox/searchBox.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["cardEle","props","className","src","monster","id","alt","name","email","Card","Monsters","map","searchBox","placeholder","handleChange","type","onChange","App","e","setState","SearchFiled","target","value","state","fetch","then","response","json","users","this","filterMonster","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTASeA,MAPf,SAAiBC,GAChB,OAAO,sBAAKC,UAAU,UAAf,UACH,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,WAChF,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,YCIRC,MAPf,SAAcR,GACV,OAAO,qBAAKC,UAAU,OAAf,SACFD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OACvB,cAAC,EAAD,CAA0BA,QAASA,GAArBA,EAAQC,UCKnBO,G,MARE,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OAEb,uBAAOC,KAAK,SACZb,UAAU,SACTW,YAAaA,EACdG,SAAUF,MC+BCG,E,kDAjCb,aAAc,IAAD,8BACX,gBASFH,aAAa,SAAAI,GACX,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SATrC,EAAKC,MAAM,CACTb,SAAS,GAGTU,YAAa,IANJ,E,qDAab,WAAoB,IAAD,OACjBI,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UAAQF,MAAK,SAAAG,GAAK,OAAE,EAAKT,SAAS,CAACT,SAASkB,S,oBAE1H,WAAS,IAAD,EACsBC,KAAKN,MAA3Bb,EADA,EACAA,SAASU,EADT,EACSA,YACTU,EAAcpB,EAASqB,QAAO,SAAA3B,GAAO,OAAEA,EAAQG,KAAKyB,cAAcC,SAASb,EAAYY,kBAE7F,OACA,sBAAK9B,UAAU,MAAf,UACE,kDACF,cAAC,EAAD,CACCW,YAAY,kBACZC,aAAce,KAAKf,eAEpB,cAAC,EAAD,CAAMJ,SAAUoB,W,GA5BFI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.cc0361af.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './card.css'\r\nfunction cardEle(props){\r\n return <div className=\"cardEle\">\r\n     <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt=\"robots\" />\r\n     <h2>{props.monster.name}</h2>\r\n     <p>{props.monster.email}</p>\r\n </div>\r\n};\r\nexport default cardEle;","import React from \"react\";\r\nimport \"./card-list.css\";\r\nimport CardEle from \"../card/card\";\r\nfunction Card(props){\r\n    return <div className=\"card\">\r\n        {props.Monsters.map(monster=>(\r\n            <CardEle key={monster.id} monster={monster}/>\r\n        ))}\r\n    </div>;\r\n}\r\nexport default Card;","import React from \"react\";\r\nimport './searchBox.style.css';\r\n\r\nconst searchBox= ({placeholder,handleChange})=>(\r\n\r\n    <input type=\"search\"\r\n    className=\"search\"\r\n     placeholder={placeholder}\r\n    onChange={handleChange}\r\n    />\r\n)\r\nexport default searchBox;","import React, {Component} from 'react';\nimport './App.css';\nimport Card from './Components/card-list/card-list';\nimport SearchBox from './Components/SearchBox/searchBox.component';\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.state={\n      Monsters:[\n     \n      ],\n      SearchFiled: ''\n\n    };\n  }\n  handleChange=e=>{\n    this.setState({SearchFiled: e.target.value});\n  }\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users').then(response=>response.json()).then(users=>this.setState({Monsters:users}));\n  }\n  render(){ \n    const{Monsters,SearchFiled}=this.state;\n    const filterMonster=Monsters.filter(monster=>monster.name.toLowerCase().includes(SearchFiled.toLowerCase()));\n\n    return (\n    <div className=\"App\">\n      <h1>Paradox Monsters</h1>\n    <SearchBox \n     placeholder=\"Search Monsters\"\n     handleChange={this.handleChange}\n    />\n    <Card Monsters={filterMonster} />\n     \n    </div>)\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}